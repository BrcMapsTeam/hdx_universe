{"notes": "Blog post about this prediction can be found here: http://bit.ly/2fWF2jq\r\n\r\nThe predicted priority index of Typhoon Haima is produced by a machine learning algorithm that was trained on four past typhoons: Haiyan, Melor, Hagupit and Rammasun. It uses base line data for the whole country, combined with impact data of windspeeds and rains, and trained on counts by the Philippine government on people affected and houses damaged.\r\n\r\n**First run**\r\nThe Priority Index is a 1-5 classification that can be used to identify the worst hit areas: those that need to be visited for further assessments or support first.\r\n\r\n**Second run**\r\nThe model now predicts two things:\r\n\r\n* a weighted index between partially damaged and completely damaged, where partially damaged is counted as 25% of the completely damaged. This has proven to give he highest accuracy.\r\n* the precentage of total damage (damaged houses versus all houses)\r\n\r\nThe absolute number of **houses damaged / people affected is insufficiently validated** at the moment, and should just be used for further trainng and ground-truthing.\r\n\r\nData sources:\r\n\r\n*   Administrative boundaries (P_Codes) - Philippines Government; Published by GADM and UN OCHA (HDX)\r\n*   Census 2015 (population) - Philippine Statistics Authority; received from UN OCHA (HDX)\r\n*   Avg. wind speed (km/h) - University College London\r\n*   Typhoon path - University College London\r\n*   Houses damaged - NDRRMC\r\n*   Rainfall - GPM\r\n*   Poverty - Pantawid pamilyang pilipino program (aggregated)\r\n\r\nFor the second run of the algorithm we also included:\r\n\r\n* Roof and wall materials\r\n* New geographical features\r\n\r\nThe result of different models can be found in the file 'Typhoon Haima - performance of different models - second run.csv' A note on how to interpret this.\r\n\r\n*  date            running date\r\n*  alg_date        same\r\n*  alg_model        name of the algorithm used\r\n*  alg_predict_on    name of the learning variable\r\n*  alg_use_log    i    s the learning variable transformed in log\r\n*  code_version        version of the learn.py code\r\n\r\nAll the columns with feat_ indicates the importance of that feature, if not present that feature was not used.\r\n\r\n*  learn_matrix        name of the learning matrix with the 5 typhoons\r\n*  run_name        unique run name (pickle files and csv files have this name for this model)\r\n*  typhoon_to_predict    name of a new typhoon to predict\r\n*  val_accuracy        accuracy based on 10 categories of damage 0% 10% 20% \u2026\r\n*  val_perc_down    perc of underpredicted categories\r\n*  val_perc_up        perc of overpredicted categories\r\n*  Val_best_score    best r2 score    \r\n*  Val_stdev_best_score    error on best score based on the CV\r\n*  Val_score_test    r2 score on the test set (this should be around +- 5% of the previus number to not overfit    \r\n*  Val_mean_error_num_houses    average error on the number of houses \r\n*  val_median_error_num_houses    median\r\n*  val_std_error_num_houses        std deviation of the errors (lower is better)\r\n\r\nAlgorithm developed by 510.global the data innovation initiative of the Netherlands Red Cross."}